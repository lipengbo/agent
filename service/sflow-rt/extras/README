This directory contains example Python scripts demonstrating sFlow-RT's
REST API:

* tail_log.py       - tail the event log
* tail_flows.py     - tail flow log
* ddos.py           - detect large flows
* threshold.py      - define a threshold and log events
* memcache_keys.py  - detect hot/missed Memcache keys
* mininet.js        - detect and block large flows on Mininet
* multipath.py      - demonstrate flow collisions in Mininet
* largeflows.js     - detect large flows in Mininet
* resonance.js      - detect and block large flows using Pyresonance
* eapi.py           - configure sFlow using eAPI and log large flows
* tcp_flows.py      - log completed TCP connections
* indexToPort.py    - utility for mapping ifIndex to switch and port on Mininet
* json2.js          - JSON encode/decode in JavaScript
* jsonrpc.js        - Implementation of JSON-RPC 2.0 protocol
* runcmds.js        - Extends JSON-RPC with Arista eAPI runCmds function
* ddos.js           - embedded DDoS script from Mininet / PyResonance article

Note: The Python scripts make use of the Python requests library:
      http://python-requests.org/

The demo.pcap file contains captured sFlow datagrams. To run sFlow-RT using
the captured file, modify the start script as follows:

start.sh
  JVM_OPTS="-Dsflow.file=extras/demo.pcap"

start.bat
  java -Dsflow.file=extras\demo.pcap -jar lib\sflowrt.jar

The apache directory contains a simple realtime dashboard example.
